This document contains git commands that need to be used in order to synchronize branches of the main repository.

These are just for info with an explanation of what they do:
git checkout main
git pull origin main
git checkout -b feature-branch-name
git push origin feature-branch-name

1. git checkout main

This command switches your current branch to the main branch. If you are on a different branch, this will move you to the main branch.

2. git pull origin main

This command fetches the latest changes from the main branch on the remote repository (referred to as origin) and merges them into your local main branch. This ensures your local main branch is up-to-date with the remote repository.

3. git checkout -b feature-branch-name

This command creates a new branch called feature-branch-name and switches to it immediately. The new branch is created based on the branch you were on before running this command, typically the main branch.

4. git push origin feature-branch-name

This command pushes your newly created branch (feature-branch-name) to the remote repository (referred to as origin). This makes your branch available to others who have access to the repository.

By using these commands, you can create a new branch for your feature, ensure it is based on the latest state of the main branch, and then push it to the remote repository for collaboration.

*****************************************************************
*****************************************************************

We often see the message "This branch is 'n' commits behind 'master'.

This is how to resolve it so the message reads "This branch is up to date with 'master'.

Resolving n commits behind master:

git checkout master - to switch to the master branch
git pull origin master - to pull the latest changes from master
git checkout stu - to switch back to the stu branch
git merge master - to merge the latest changes from master into stu
git push origin stu - to push the updated stu branch to the remote repository

git checkout master
git pull origin master
git checkout stu
git merge master
git push origin stu

*****************************************************************
*****************************************************************
Reference - some git commands & what they do
*****************************************************************

*****************************************************************

git status - list all new or modified files to be committed

git add . - adds all the files in the local repo and stages them for commits
git reset HEAD <file> - to unstage a specific file

git add FILENAME.ext - add a specific file e.g. git add README.txt

git commit -m "your commit message" - commit files you added to the local repo

git reset HEAD~1 - remove the most recent commit

git remote -v - list remote repos you are connected to

git push -u origin branchname - push changes to the remote repo 'branchname'

git diff - show file changes not yet staged (press 'q' to quit the command)

git checkout . - revert back to the last committed version of the repo
    or:
git checkout -- <filename> - revert back to the last committed version of a specific file

git log - view the commit history of your files (q to quite the cmd)

Each time you make changes that you want to be reflected on GitHub, the following are the most common flow of commands:

$ git add .
$ git status # Lists all new or modified files to be committed
$ git commit -m "Second commit"
$ git push -u origin master

*****************************************************************
*****************************************************************
Testing collaborator's changes before merging:

1. Fetch all branches from the remote repository:
   git fetch origin

2. Check out the collaborator's branch:
   git checkout nette
   # If the branch does not exist locally, use:
   # git checkout -b nette origin/nette

3. Test the changes:
   Run any tests or perform any manual testing required to verify the changes made by the collaborator.

4. Merge the collaborator's branch into a local master branch:
   git checkout master
   git pull origin master
   git merge nette

5. Push the changes to the remote master branch:
   git push origin master

Pushing a local branch to GitHub:

1. Ensure you are on the `nette` branch:
   git checkout nette

2. Push the `nette` branch to the remote repository:
   git push origin nette

*****************************************************************
Ensuring 'nette' has the latest changes from 'stu':

1. Fetch the latest changes from the remote repository:
   git fetch origin

2. Check out the `nette` branch:
   git checkout nette

3. Merge the `stu` branch into the `nette` branch:
   git merge stu

4. Resolve any merge conflicts if they arise.

5. Push the updated `nette` branch to the remote repository:
   git push origin nette

Copy and paste these into a Git bash terminal and press 'Enter':

git fetch origin
git checkout nette
git merge stu

WARNING: If there are conflicts, STOP!!! Do no more, these have to be fixed!!!

Then, if there are no conflicts, copy and paste this into
Git bash terminal and press 'Enter'

git push origin nette


   *****************************************************************
Deleting a local branch:

1. Ensure you are not on the `nuttysedits` branch:
   git branch
   # If you are on the `nuttysedits` branch, switch to another branch:
   git checkout master

2. Delete the `nuttysedits` branch:
   git branch -d nuttysedits
   # If the branch has not been merged and you want to force delete it, use:
   git branch -D nuttysedits

   *****************************************************************

To clean up the local references to remote branches that no longer exist on the remote repository, you can use the git remote prune command. This will remove the local references to remote branches that have been deleted on the remote repository.

Cleaning up remote branches:

1. Prune the remote branches:
   git remote prune origin

2. Verify the remote branches:
   git branch -r
   # Ensure only the actual remote branches are listed: master, stu, nette